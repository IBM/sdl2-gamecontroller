# This workflow will triage pull requests and apply a label based on the
# paths that are modified in the pull request.
#
# To use this workflow, you will need to set up a .github/labeler.yml
# file with configuration.  For more information, see:
# https://github.com/actions/labeler

name: Build PR
on: [pull_request]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - run: sudo apt-get update
      - run: sudo apt install -y build-essential cmake libsdl2-dev
      - run: npm ci

  build-brew:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - run: sudo apt-get update
      - run: sudo apt install -y build-essential cmake git
      - name: Install SDL2 with brew
        run: brew install sdl2
      - name: Compile
        run: npm ci

  build-mac:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Install SDL2 with brew
        run: brew install sdl2
      - name: Compile
        run: npm ci

  check-cpplint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - run: sudo apt-get update
      - run: sudo apt install -y cppcheck
      - name: Install cpplint
        run: pip install cpplint
      - name: Lint
        run: cpplint src/*
      - name: Check
        run: cppcheck --std=c++17 --language=c++ src/*

  check-eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install dependencies
        run: npm install
      - name: Lint
        run: npm run eslint

  check-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: check format
        run: clang-format -n src/*  |& tee errors
      - run: test ! -s errors

name: Publish NPM

on:
  workflow_dispatch:

permissions:
  contents: write  # allow creating releases
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt install -y build-essential cmake libsdl2-dev
      - name: Build distribution
        run: |
          npm ci
          npm run build
      - name: Save dist folder
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  verify-package:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Get dist folder
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Check the package
        run: ./test/verify-packed-files.sh

  publish-npm:
    needs: verify-package
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.save-version.outputs.version }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Required for pushing
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: https://registry.npmjs.org/
      - name: Get dist folder
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
      - name: Version and Publish
        id: save-version
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          VERSION=$(npm version patch)
          echo "version=${VERSION#v}" >> $GITHUB_OUTPUT
          npm publish --provenance
          git push origin HEAD:${{ github.ref }} --follow-tags

  #publish-gpr:
  #  needs: build
  #  runs-on: ubuntu-latest
  #  permissions:
  #    contents: read
  #    packages: write
  #  steps:
  #    - uses: actions/checkout@v3
  #    - uses: actions/setup-node@v3
  #      with:
  #        node-version: 18
  #        registry-url: https://npm.pkg.github.com/
  #    - run: npm publish --registry=https://npm.pkg.github.com/
  #      env:
  #        NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  create-release:
    needs: publish-npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          tag_name: v${{ needs.publish-npm.outputs.version }}
